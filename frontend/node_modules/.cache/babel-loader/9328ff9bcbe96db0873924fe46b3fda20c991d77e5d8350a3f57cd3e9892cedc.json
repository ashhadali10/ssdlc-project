{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashadali2\\\\Documents\\\\simple_project\\\\frontend\\\\src\\\\components\\\\SsrfTest.jsx\",\n  _s = $RefreshSig$();\n// src/components/SSRFTest.jsx\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SSRFTest = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState('');\n  const handleTestSSRF = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5000/ssrf-test?url=${encodeURIComponent(url)}`);\n      const responseData = await response.text();\n      setResponse(responseData);\n      setError('');\n    } catch (error) {\n      console.error(error);\n      setError('Error occurred while testing SSRF.');\n      setResponse('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test SSRF Vulnerability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTestSSRF,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"url\",\n        children: \"Enter URL to fetch:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"url\",\n        value: url,\n        onChange: e => setUrl(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Test SSRF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(SSRFTest, \"c2/KZeuxyf1EZ3w4XqlZoktNcTQ=\");\n_c = SSRFTest;\nexport default SSRFTest;\nvar _c;\n$RefreshReg$(_c, \"SSRFTest\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SSRFTest","_s","url","setUrl","response","setResponse","error","setError","handleTestSSRF","e","preventDefault","fetch","encodeURIComponent","responseData","text","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/ashadali2/Documents/simple_project/frontend/src/components/SsrfTest.jsx"],"sourcesContent":["// src/components/SSRFTest.jsx\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst SSRFTest = () => {\r\n  const [url, setUrl] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleTestSSRF = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/ssrf-test?url=${encodeURIComponent(url)}`);\r\n      const responseData = await response.text();\r\n      setResponse(responseData);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError('Error occurred while testing SSRF.');\r\n      setResponse('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Test SSRF Vulnerability</h1>\r\n      <form onSubmit={handleTestSSRF}>\r\n        <label htmlFor=\"url\">Enter URL to fetch:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"url\"\r\n          value={url}\r\n          onChange={(e) => setUrl(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Test SSRF</button>\r\n      </form>\r\n      {response && (\r\n        <div className=\"response\">\r\n          <h2>Response:</h2>\r\n          <pre>{response}</pre>\r\n        </div>\r\n      )}\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SSRFTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}